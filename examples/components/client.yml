---
  - include: "{{prudentia_dir}}/tasks/nodejs.yml"
    tags: client

  - include: "{{prudentia_dir}}/tasks/ruby.yml"
    tags: client

  - name: Client | Compile
    shell: chdir={{install_dir_client}} /bin/bash -lc './clean_build.sh'
    tags:
      - client
      - update

#  - name: Client | Fetch fat gzip
#    shell: "chdir={{install_client_dir}} curl -u {{jenkins_user}}:{{jenkins_password}} {{client_artifact_url}} > {{client_artifact_name}}"
#    tags:
#      - client
#      - update
#
#  - name: Client | Unzip client artifact
#    command: chdir={{install_client_dir}} /bin/tar -xf {{client_artifact_name}}
#    tags:
#      - client
#      - update

  - include: "{{prudentia_dir}}/tasks/nginx.yml"
    tags: client

  - name: Client | Creating Nginx Log Dir
    file: path=/usr/nginx/logs state=directory
    sudo: yes
    tags: client

  - name: Client | Copy SSL Certificates
    copy: src={{ssl_dir_path}}/{{item}} dest={{ssl_install_path}}/{{item}}
    with_items: ssl_files
    sudo: yes
    tags:
      - client
      - update

  - name: Client | Generate nginx dhparam.pem if not exists
    command: openssl dhparam -out {{ssl_install_path}}/dhparam.pem 4096 creates={{ssl_install_path}}/dhparam.pem
    sudo: yes
    tags: client

  - name: Client | Copy Nginx configuration
    template: src={{root_dir}}/components/templates/client/nginx.conf.j2 dest=/etc/nginx/sites-available/example.com backup=yes
    sudo: yes
    tags:
      - client
      - update

  - name: Client | Creating Nginx Log Dir
    file: path=/usr/share/nginx/logs state=directory
    sudo: yes
    tags: client

  - name: Client | Enable website
    file: src=/etc/nginx/sites-available/example.com dest=/etc/nginx/sites-enabled/example.com state=link
    sudo: yes
    tags:
      - client
      - update

  - name: Client | Reload Nginx
    service: name=nginx state=reloaded
    sudo: yes
    tags:
      - client
      - update
